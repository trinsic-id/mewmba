name: "Mewmba Create PR"
description: "Commit changes to branch, create PR across repositories"

inputs:
  apiGithubToken:
    description: 'Github Api token'
    required: true
  prTitle:
    description: 'PR Title'
    required: false
    default: ''
  prBody:
    description: 'PR Description'
    required: false
    default: ''
  gitSha:
    description: 'github.sha'
    required: false
    default: ${{ github.event.pull_request_head.sha || github.sha }}
  githubAssignee:
    description: 'Assignee for the created PRs'
    required: false
    default: ${{ github.actor }}
  githubBranch:
    description: 'github.head_ref'
    required: false
    default: ${{ github.head_ref || github.ref_name }}
  githubRepository:
    description: 'Target repository for this PR'
    required: false
    default: ${{ github.repository }}
  githubWorkingDirectory:
    description: 'Subfolder repository for this PR'
    required: false
    default: ''
  
outputs:
  # TODO - Show more outputs as needed
  prCreated:
    description: 'Boolean of whether a PR was created'
    value: ${{ steps.create-pr.outputs.pr_created }}
  prNumber:
    description: 'Number of the PR created'
    value: ${{ steps.create-pr.outputs.pr_number }}
  prUrl:
    description: 'URL to PR review'
    value: ${{ steps.create-pr.outputs.pr_url }}

runs:
  using: "composite"
  steps:
    - name: Git Short SHA
      id: git-short-sha
      run: |
        echo "shortsha=$('${{ inputs.gitSha }}'.Substring(0,8))" >> $env:GITHUB_OUTPUT
      shell: pwsh
    - name: Create branch, pr, etc names
      id: create-names
      run: |
        echo "newbranchname=mewmba/${{ inputs.githubBranch }}-${{ steps.git-short-sha.outputs.shortsha }}-generated-protos" >> $env:GITHUB_OUTPUT
        echo "oldbranchname=${{ inputs.githubBranch }}" >> $env:GITHUB_OUTPUT
      shell: pwsh
    - name: Default PR title, body
      id: default-pr
      run: |
        echo "defaultprtitle=Generated from ${{ steps.create-names.outputs.oldbranchname }}-${{ steps.git-short-sha.outputs.shortsha }}" >> $env:GITHUB_OUTPUT
        echo "defaultprbody=:rocket: Generated from ${{ steps.create-names.outputs.oldbranchname }} at commit SHA ${{ inputs.gitSha }}" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Commit changes
      uses: actions-js/push@master
      id: commit-changes
      with:
        author_name: Mewmba
        author_email: mewmba@trinsic.id
        github_token: ${{ inputs.apiGithubToken }}
        message: 'Generated code and changes from branch ${{ steps.create-names.outputs.oldbranchname }}, commit SHA ${{ steps.git-short-sha.outputs.shortsha }}'
        branch: ${{ steps.create-names.outputs.newbranchname }}
        directory: '${{ github.workspace }}/${{ inputs.githubWorkingDirectory }}'
        repository: ${{ inputs.githubRepository }}
        force: true
        
    - name: Fix ownership
      run: |
        git config --global --add safe.directory ${{ github.workspace }}/${{ inputs.githubWorkingDirectory }}
        git config --global --add safe.directory /github/workspace/${{ inputs.githubWorkingDirectory }}
      shell: pwsh

    - name: Create Pull Request
      id: create-pr
      uses: commercetools/pull-request@add-workdir
      with:
        source_branch: ${{ steps.create-names.outputs.newbranchname }}
        destination_branch: ${{ steps.create-names.outputs.oldbranchname }}
        pr_title: ${{ inputs.prTitle || steps.create-names.defaultprtitle }}
        pr_body: ${{ inputs.prBody || steps.create-names.defaultprbody }}
        pr_reviewer: ${{ inputs.githubAssignee }}
        pr_allow_empty: false
        github_token: ${{ inputs.apiGithubToken }}
        working_directory: ${{ github.workspace }}/${{ inputs.githubWorkingDirectory }}
        repository: ${{ inputs.githubRepository }}
